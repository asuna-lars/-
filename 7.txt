Программа 1.
#include <iostream>
using namespace std;
int main()
{
int i, j, n;
cout << "Введите размеры матриц А, B, R ";
cin >> n;
// выделение памяти под матрицы
float **a = new float*[n]; // указатель на матрицу А
for( j = 0; j < n; j++ )
a[j] = new float [n];
float **b = new float*[n]; // указатель на матрицу В
for( j = 0; j < n; j++ )
b[j] = new float [n];
float **r = new float*[n]; // указатель на матрицу R
for( j = 0; j < n; j++ )
r[j] = new float [n];
// ввод матриц А и В
for ( i = 0; i < n; i++ )
{
for ( j = 0; j < n; j++ )
cin >> a[i][j];
cout << endl;
}
cout << endl;
for ( i = 0; i < n; i++ )
{
for ( j = 0; j < n; j++ )
cin >> b[i][j];
cout << endl;
}
cout << endl;
for ( i = 0; i < n; i++ ) // умножение матриц
for ( j = 0; j < n; j++ )
{
float s = 0;
for ( int k = 0; k < n; k++ )
s += a[i][k] * b[k][j];
r[i][j] = s;
}
cout << "Ответ" << endl; // вывод на экран матрицы-результата
for ( i = 0; i < n; i++ )
{
for ( j = 0; j < n; j++ )
cout <<setw(6) << r[i][j];
cout << endl;
}
// уничтожение динамических массивов
for ( i = 0; i < n; i++ ) delete[] a[i]; delete[]a;
for ( i = 0; i < n; i++ ) delete[] b[i]; delete[]b;
for ( i = 0; i < n; i++ ) delete[] r[i]; delete[]r;
}

Программа 2.
#include <iostream.h>
int main (void)
{
double x=5.6, y;
int n;
int *p, *p1;
p = &n; //верная запись
p1 = &x; //нежелательная запись
y = *p1;
cout<< y; //не выведет число 5,6
return 0;
}

Программа 3.
#include <iostream.h>
int main (void)
{
int x;
int *p1, *p2;
p1 = &x; p2 = p1;
cout<< p2; //выведет на экран адрес переменной x
return 0
}

Программа 4.
#include <stdio.h>
int main()
{
int x, *p, **q;
x=10;
p=&x;
q=&p;
printf (“%d”, **q);//вывод числа x
return 0;
}


Программа 5.
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <malloc.h>
#include <stdlib.h>
int main()
{
  int *a;  // указатель на массив
  int i, n;
  system("chcp 1251");
  system("cls");
  printf("Введите размер массива: ");
  scanf("%d", &n);
  // Выделение памяти
  a = (int*)malloc(n * sizeof(int));
  // Ввод элементов массива
  for (i = 0; i<n; i++)
  {
    printf("a[%d] = ", i);
    scanf("%d", &a[i]);
  }
  // Вывод элементов массива
  for (i = 0; i<n; i++)
    printf("%d ", a[i]);
  free(a);
  getchar();   getchar();
  return 0;
}



#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <malloc.h>
#include <stdlib.h>
int main()
{
  int *a;  // указатель на массив
  int i, j, n, m;
  system("chcp 1251");
  system("cls");
  printf("Введите количество строк: ");
  scanf("%d", &n);
  printf("Введите количество столбцов: ");
  scanf("%d", &m);
  // Выделение памяти
  a = (int*)malloc(n*m * sizeof(int));
  // Ввод элементов массива
  for (i = 0; i<n; i++)  // цикл по строкам
  {
    for (j = 0; j<m; j++)  // цикл по столбцам
    {
      printf("a[%d][%d] = ", i, j);
      scanf("%d", (a + i*m + j));
    }
  }
  // Вывод элементов массива
  for (i = 0; i<n; i++)  // цикл по строкам
  {
    for (j = 0; j<m; j++)  // цикл по столбцам
    {
      printf("%5d ", *(a + i*m + j)); // 5 знакомест под элемент массива
    }
    printf("\n");
  }
  free(a);
  getchar();   getchar();
  return 0;
}



#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <malloc.h>
#include <stdlib.h>
int main()
{
  int **a;  // указатель на указатель на строку элементов
  int i, j, n, m;
  system("chcp 1251");
  system("cls");
  printf("Введите количество строк: ");
  scanf("%d", &n);
  printf("Введите количество столбцов: ");
  scanf("%d", &m);
  // Выделение памяти под указатели на строки
  a = (int**)malloc(n * sizeof(int*));
  // Ввод элементов массива
  for (i = 0; i<n; i++)  // цикл по строкам
  {
    // Выделение памяти под хранение строк
    a[i] = (int*)malloc(m * sizeof(int));
    for (j = 0; j<m; j++)  // цикл по столбцам
    {
      printf("a[%d][%d] = ", i, j);
      scanf("%d", &a[i][j]);
    }
  }
  // Вывод элементов массива
  for (i = 0; i < n; i++)  // цикл по строкам
  {
    for (j = 0; j < m; j++)  // цикл по столбцам
    {
      printf("%5d ", a[i][j]); // 5 знакомест под элемент массива
    }
    printf("\n");
  }
  // Очистка памяти
  for (i = 0; i < n; i++)  // цикл по строкам
    free(a[i]);   // освобождение памяти под строку
  free(a);
  getchar();   getchar();
  return 0;
}